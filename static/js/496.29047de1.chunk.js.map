{"version":3,"file":"static/js/496.29047de1.chunk.js","mappings":"sKACA,MAAyB,sB,SCKnBA,EAAe,CACnBC,KAAM,IACNC,IAAK,IAGMC,EAAQ,SAAHC,GAAA,IAAMC,EAAOD,EAAPC,QAAOC,EAAAF,EAAEG,UAAAA,OAAS,IAAAD,EAAG,OAAMA,EAAA,OACjDE,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXC,MAAOX,EAAaO,GACpBK,IAAKP,EAAO,GAAAQ,OAbK,6BAaa,KAAAA,OAAIN,EAAS,KAAAM,OAAIR,GAXjD,8DAYES,IAAKT,GACL,C,wJCfSU,EAAQ,SAAHX,GAAmB,IAAbY,EAAKZ,EAALY,MACtB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEX,EAAAA,EAAAA,KAACL,EAAAA,EAAK,CAACE,QAASW,EAAMI,aAAcb,UAAU,SAC9CC,EAAAA,EAAAA,KAAA,OAAAW,SAAMH,EAAMK,QACZJ,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,cAAYH,EAAMM,eAG7B,ECTA,EAAyB,qBCqCzB,EAhCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAcpB,OAZAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAA5B,GAAA6B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GAGLC,EAAAA,EAAAA,IAAgBlB,GAAS,KAAD,EAAAa,EAAAE,EAAAI,KADlBL,EAAQD,EAAtBO,KAAQd,KAGVC,EAAQO,GAAU,wBAAAC,EAAAM,OAAA,GAAAT,EAAA,KACnB,kBANa,OAAA/B,EAAAyC,MAAA,KAAAC,UAAA,KAQdd,GACF,GAAG,CAACT,KAGFf,EAAAA,EAAAA,KAAA,OAAAW,SACO,OAAJU,QAAI,IAAJA,GAAAA,EAAMkB,QACLvC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAWS,SACvBU,EAAKmB,KAAI,SAAAC,GAAI,OACZzC,EAAAA,EAAAA,KAAA,MAAAW,UACEX,EAAAA,EAAAA,KAACO,EAAK,CAACC,MAAOiC,KADPA,EAAKC,GAET,OAIT1C,EAAAA,EAAAA,KAAA,OAAAW,SAAK,sCAIb,C","sources":["webpack://react-homework-template/./src/components/Thumb/Thumb.module.css?88f8","components/Thumb/Thumb.jsx","components/Actor/Actor.jsx","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"Thumb_poster__oYEXx\"};","import css from './Thumb.module.css';\n\nconst baseImageUrl = 'https://image.tmdb.org/t/p';\nconst defaultImage =\n  'https://glavcom.ua/img/article/9139/95_main-v1678685008.jpg';\n\nconst allowedWidth = {\n  w300: 300,\n  w92: 92,\n};\n\nexport const Thumb = ({ imageId, imageSize = 'w300' }) => (\n  <img\n    className={css.poster}\n    width={allowedWidth[imageSize]}\n    src={imageId ? `${baseImageUrl}/${imageSize}/${imageId}` : defaultImage}\n    alt={imageId}\n  />\n);\n","import { Thumb } from '../Thumb/Thumb';\n\nexport const Actor = ({ actor }) => {\n  return (\n    <>\n      <Thumb imageId={actor.profile_path} imageSize=\"w92\" />\n      <div>{actor.name}</div>\n      <div>Character: {actor.character}</div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"actors\":\"Cast_actors__m46vw\",\"actor\":\"Cast_actor__b6B3J\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../api/api';\nimport { Actor } from '../../components/Actor/Actor';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const loadCast = async () => {\n      const {\n        data: { cast: castList },\n      } = await getMovieCredits(movieId);\n\n      setCast(castList);\n    };\n\n    loadCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast?.length ? (\n        <ul className={css.actors}>\n          {cast.map(item => (\n            <li key={item.id}>\n              <Actor actor={item} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No cast available for this movie</div>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["allowedWidth","w300","w92","Thumb","_ref","imageId","_ref$imageSize","imageSize","_jsx","className","css","width","src","concat","alt","Actor","actor","_jsxs","_Fragment","children","profile_path","name","character","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","loadCast","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieCredit","castList","_context","prev","next","getMovieCredits","sent","data","stop","apply","arguments","length","map","item","id"],"sourceRoot":""}